<?xml version="1.0" encoding="UTF-8"?>
<!--
 Copyright 2017 Red Hat, Inc, and individual contributors.

 Licensed under the Apache License, Version 2.0 (the "License");
 you may not use this file except in compliance with the License.
 You may obtain a copy of the License at

 http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.
-->
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>org.jboss.snowdrop</groupId>
    <artifactId>spring-boot-1.4-bom</artifactId>
    <version>2.0.0.redhat-15</version>
  </parent>

  <groupId>org.jboss.snowdrop</groupId>
  <artifactId>licenses-generator</artifactId>
  <version>1.0</version>

  <properties>
    <templates.dir>${project.basedir}/src/main/resources/templates</templates.dir>
    <licenses.dir>${project.basedir}/src/main/resources/licenses</licenses.dir>

    <license-maven-plugin.version>1.13</license-maven-plugin.version>
    <xml-maven-plugin.version>1.0.1</xml-maven-plugin.version>
  </properties>

  <repositories>
    <repository>
      <id>indy-untested-builds</id>
      <name>Indy Untested Builds</name>
      <url>http://indy.cloud.pnc.engineering.redhat.com/api/group/builds-untested+shared-imports+public</url>
    </repository>
  </repositories>

  <dependencies>
    <!-- TODO add dependencies which should be included in licenses.xml generation -->
    <!-- fabric8 -->
    <dependency>
      <groupId>io.fabric8</groupId>
      <artifactId>kubernetes-client</artifactId>
      <version>${version.io.fabric8.kubernetes-client}</version>
    </dependency>
    <dependency>
      <groupId>io.fabric8</groupId>
      <artifactId>openshift-client</artifactId>
      <version>${version.io.fabric8.openshift-client}</version>
    </dependency>
    <dependency>
      <groupId>io.fabric8</groupId>
      <artifactId>spring-cloud-kubernetes-core</artifactId>
      <version>${version.io.fabric8.spring-cloud-kubernetes-core}</version>
    </dependency>
    <dependency>
      <groupId>io.fabric8</groupId>
      <artifactId>spring-cloud-starter-kubernetes-netflix</artifactId>
      <version>${version.io.fabric8.spring-cloud-starter-kubernetes-netflix}</version>
    </dependency>

    <!-- spring-boot -->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot</artifactId>
      <version>${version.org.springframework.boot.spring-boot}</version>
    </dependency>
    <!-- Doesn't exist in a repository -->
    <!--<dependency>-->
      <!--<groupId>org.springframework.boot</groupId>-->
      <!--<artifactId>spring-boot</artifactId>-->
      <!--<version>${version.org.springframework.boot.spring-boot}</version>-->
      <!--<classifier>tests</classifier>-->
    <!--</dependency>-->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-test</artifactId>
      <version>${version.org.springframework.boot.spring-boot}</version>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-test-autoconfigure</artifactId>
      <version>${version.org.springframework.boot.spring-boot}</version>
    </dependency>
    <!-- Doesn't exist in a repository -->
    <!--<dependency>-->
      <!--<groupId>org.springframework.boot</groupId>-->
      <!--<artifactId>spring-boot-test</artifactId>-->
      <!--<version>${version.org.springframework.boot.spring-boot}</version>-->
      <!--<classifier>tests</classifier>-->
    <!--</dependency>-->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-actuator</artifactId>
      <version>${version.org.springframework.boot.spring-boot}</version>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-actuator-docs</artifactId>
      <version>${version.org.springframework.boot.spring-boot}</version>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-autoconfigure</artifactId>
      <version>${version.org.springframework.boot.spring-boot}</version>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-configuration-metadata</artifactId>
      <version>${version.org.springframework.boot.spring-boot}</version>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-configuration-processor</artifactId>
      <version>${version.org.springframework.boot.spring-boot}</version>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-devtools</artifactId>
      <version>${version.org.springframework.boot.spring-boot}</version>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-loader</artifactId>
      <version>${version.org.springframework.boot.spring-boot}</version>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-loader-tools</artifactId>
      <version>${version.org.springframework.boot.spring-boot}</version>
    </dependency>

    <!-- spring-boot starters -->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter</artifactId>
      <version>${version.org.springframework.boot.spring-boot}</version>
      <exclusions>
        <exclusion>
          <groupId>commons-logging</groupId>
          <artifactId>commons-logging</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-actuator</artifactId>
      <version>${version.org.springframework.boot.spring-boot}</version>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-data-jpa</artifactId>
      <version>${version.org.springframework.boot.spring-boot}</version>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-data-mongodb</artifactId>
      <version>${version.org.springframework.boot.spring-boot}</version>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-data-rest</artifactId>
      <version>${version.org.springframework.boot.spring-boot}</version>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-jdbc</artifactId>
      <version>${version.org.springframework.boot.spring-boot}</version>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-test</artifactId>
      <version>${version.org.springframework.boot.spring-boot}</version>
      <exclusions>
        <exclusion>
          <groupId>commons-logging</groupId>
          <artifactId>commons-logging</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-logging</artifactId>
      <version>${version.org.springframework.boot.spring-boot}</version>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-web</artifactId>
      <version>${version.org.springframework.boot.spring-boot}</version>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-tomcat</artifactId>
      <version>${version.org.springframework.boot.spring-boot}</version>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-websocket</artifactId>
      <version>${version.org.springframework.boot.spring-boot}</version>
    </dependency>

    <!-- spring-framework -->
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-aspects</artifactId>
      <version>${version.org.springframework.spring-aspects}</version>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-beans</artifactId>
      <version>${version.org.springframework.spring-beans}</version>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-context</artifactId>
      <version>${version.org.springframework.spring-context}</version>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-core</artifactId>
      <version>${version.org.springframework.spring-core}</version>
      <exclusions>
        <exclusion>
          <groupId>commons-logging</groupId>
          <artifactId>commons-logging</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-orm</artifactId>
      <version>${version.org.springframework.spring-orm}</version>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-tx</artifactId>
      <version>${version.org.springframework.spring-tx}</version>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-web</artifactId>
      <version>${version.org.springframework.spring-web}</version>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-webmvc</artifactId>
      <version>${version.org.springframework.spring-webmvc}</version>
    </dependency>
    <dependency>
      <groupId>org.springframework.security</groupId>
      <artifactId>spring-security-crypto</artifactId>
      <version>${version.org.springframework.security.spring-security-crypto}</version>
    </dependency>

    <dependency>
      <groupId>com.fasterxml</groupId>
      <artifactId>classmate</artifactId>
      <version>${version.com.fasterxml.classmate}</version>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-annotations</artifactId>
      <version>${version.com.fasterxml.jackson.core.jackson-annotations}</version>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-core</artifactId>
      <version>${version.com.fasterxml.jackson.core.jackson-core}</version>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-databind</artifactId>
      <version>${version.com.fasterxml.jackson.core.jackson-databind}</version>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.dataformat</groupId>
      <artifactId>jackson-dataformat-yaml</artifactId>
      <version>${version.com.fasterxml.jackson.dataformat.jackson-dataformat-yaml}</version>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.jaxrs</groupId>
      <artifactId>jackson-jaxrs-json-provider</artifactId>
      <version>${version.com.fasterxml.jackson.jaxrs.jackson-jaxrs-json-provider}</version>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.module</groupId>
      <artifactId>jackson-module-jaxb-annotations</artifactId>
      <version>${version.com.fasterxml.jackson.module.jackson-module-jaxb-annotations}</version>
    </dependency>
    <dependency>
      <groupId>commons-codec</groupId>
      <artifactId>commons-codec</artifactId>
      <version>${version.commons-codec.commons-codec}</version>
    </dependency>
    <dependency>
      <groupId>com.h2database</groupId>
      <artifactId>h2</artifactId>
      <version>${version.com.h2database.h2}</version>
    </dependency>
    <dependency>
      <groupId>javax.servlet</groupId>
      <artifactId>jstl</artifactId>
      <version>${version.javax.servlet.jstl}</version>
    </dependency>
    <dependency>
      <groupId>mysql</groupId>
      <artifactId>mysql-connector-java</artifactId>
      <version>${version.mysql.mysql-connector-java}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.cxf</groupId>
      <artifactId>cxf-spring-boot-starter-jaxrs</artifactId>
      <version>${version.org.apache.cxf.cxf-spring-boot-starter-jaxrs}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.httpcomponents</groupId>
      <artifactId>httpclient</artifactId>
      <version>${version.org.apache.httpcomponents.httpclient}</version>
      <exclusions>
        <exclusion>
          <groupId>commons-logging</groupId>
          <artifactId>commons-logging</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.apache.httpcomponents</groupId>
      <artifactId>httpcore</artifactId>
      <version>${version.org.apache.httpcomponents.httpcore}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.httpcomponents</groupId>
      <artifactId>httpmime</artifactId>
      <version>${version.org.apache.httpcomponents.httpmime}</version>
    </dependency>
    <dependency>
      <groupId>org.codehaus.groovy</groupId>
      <artifactId>groovy</artifactId>
      <version>${version.org.codehaus.groovy.groovy}</version>
    </dependency>
    <dependency>
      <groupId>org.assertj</groupId>
      <artifactId>assertj-core</artifactId>
      <version>${version.org.assertj.assertj-core}</version>
    </dependency>
    <dependency>
      <groupId>org.codehaus.groovy</groupId>
      <artifactId>groovy-json</artifactId>
      <version>${version.org.codehaus.groovy.groovy-json}</version>
    </dependency>
    <dependency>
      <groupId>org.codehaus.groovy</groupId>
      <artifactId>groovy-xml</artifactId>
      <version>${version.org.codehaus.groovy.groovy-xml}</version>
    </dependency>
    <dependency>
      <groupId>org.hibernate</groupId>
      <artifactId>hibernate-validator</artifactId>
      <version>${version.org.hibernate.hibernate-validator}</version>
    </dependency>
    <dependency>
      <groupId>org.javassist</groupId>
      <artifactId>javassist</artifactId>
      <version>${version.org.javassist.javassist}</version>
    </dependency>
    <dependency>
      <groupId>org.jboss.logging</groupId>
      <artifactId>jboss-logging</artifactId>
      <version>${version.org.jboss.logging.jboss-logging}</version>
    </dependency>
    <dependency>
      <groupId>org.json</groupId>
      <artifactId>json</artifactId>
      <version>${version.org.json.json}</version>
    </dependency>
    <dependency>
      <groupId>org.keycloak</groupId>
      <artifactId>keycloak-adapter-spi</artifactId>
      <version>${version.org.keycloak.keycloak-adapters}</version>
    </dependency>
    <dependency>
      <groupId>org.keycloak</groupId>
      <artifactId>keycloak-tomcat8-adapter</artifactId>
      <version>${version.org.keycloak.keycloak-adapters}</version>
    </dependency>
    <dependency>
      <groupId>org.keycloak</groupId>
      <artifactId>keycloak-spring-boot-adapter</artifactId>
      <version>${version.org.keycloak.keycloak-adapters}</version>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>jul-to-slf4j</artifactId>
      <version>${version.org.slf4j.jul-to-slf4j}</version>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
      <version>${version.org.slf4j.slf4j-api}</version>
    </dependency>
    <dependency>
      <groupId>org.yaml</groupId>
      <artifactId>snakeyaml</artifactId>
      <version>${version.org.yaml.snakeyaml}</version>
    </dependency>
    <dependency>
      <groupId>xml-apis</groupId>
      <artifactId>xml-apis</artifactId>
      <version>${version.xml-apis.xml-apis}</version>
    </dependency>

    <!-- spring-cloud -->
    <dependency>
      <groupId>org.springframework.cloud</groupId>
      <artifactId>spring-cloud-starter-hystrix</artifactId>
      <version>${version.org.springframework.cloud.spring-cloud-netflix}</version>
    </dependency>
    <dependency>
      <groupId>org.springframework.cloud</groupId>
      <artifactId>spring-cloud-starter-ribbon</artifactId>
      <version>${version.org.springframework.cloud.spring-cloud-netflix}</version>
    </dependency>
    <dependency>
      <groupId>org.springframework.cloud</groupId>
      <artifactId>spring-cloud-sleuth-zipkin</artifactId>
      <version>${version.org.springframework.cloud.spring-cloud-sleuth-zipkin}</version>
    </dependency>

    <!-- Tomcat -->
    <dependency>
      <groupId>org.apache.tomcat.embed</groupId>
      <artifactId>tomcat-embed-core</artifactId>
      <version>${version.org.apache.tomcat.embed.tomcat-embed-core}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.tomcat.embed</groupId>
      <artifactId>tomcat-embed-el</artifactId>
      <version>${version.org.apache.tomcat.embed.tomcat-embed-el}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.tomcat.embed</groupId>
      <artifactId>tomcat-embed-jasper</artifactId>
      <version>${version.org.apache.tomcat.embed.tomcat-embed-jasper}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.tomcat.embed</groupId>
      <artifactId>tomcat-embed-websocket</artifactId>
      <version>${version.org.apache.tomcat.embed.tomcat-embed-websocket}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.tomcat</groupId>
      <artifactId>tomcat-jdbc</artifactId>
      <version>${version.org.apache.tomcat.tomcat-jdbc}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.tomcat</groupId>
      <artifactId>tomcat-juli</artifactId>
      <version>${version.org.apache.tomcat.tomcat-juli}</version>
    </dependency>
  </dependencies>

  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-clean-plugin</artifactId>
        <configuration>
          <filesets>
            <fileset>
              <directory>${licenses.dir}</directory>
            </fileset>
          </filesets>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>license-maven-plugin</artifactId>
        <version>${license-maven-plugin.version}</version>
        <executions>
          <execution>
            <id>generate-initial-licenses</id>
            <goals>
              <goal>aggregate-download-licenses</goal>
            </goals>
            <phase>generate-resources</phase>
            <configuration>
              <licensesOutputFile>${project.build.directory}/licenses.xml</licensesOutputFile>
              <offline>true</offline>
            </configuration>
          </execution>
          <execution>
            <id>download-licenses</id>
            <goals>
              <goal>aggregate-download-licenses</goal>
            </goals>
            <phase>process-resources</phase>
            <configuration>
              <licensesConfigFile>${project.build.directory}/licenses.xml</licensesConfigFile>
              <licensesOutputFile>${licenses.dir}/licenses.xml</licensesOutputFile>
              <licensesOutputDirectory>${licenses.dir}/content</licensesOutputDirectory>
              <sortByGroupIdAndArtifactId>true</sortByGroupIdAndArtifactId>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>xml-maven-plugin</artifactId>
        <version>${xml-maven-plugin.version}</version>
        <executions>
          <execution>
            <id>fix-licenses</id>
            <goals>
              <goal>transform</goal>
            </goals>
            <phase>generate-resources</phase>
            <configuration>
              <transformationSets>
                <transformationSet>
                  <dir>${project.build.directory}</dir>
                  <includes>
                    <include>licenses.xml</include>
                  </includes>
                  <stylesheet>${templates.dir}/licenses-fix.xsl</stylesheet>
                  <outputDir>${project.build.directory}</outputDir>
                  <fileMappers>
                    <fileMapper implementation="org.codehaus.plexus.components.io.filemappers.FileExtensionMapper">
                      <targetExtension>.xml</targetExtension>
                    </fileMapper>
                  </fileMappers>
                </transformationSet>
              </transformationSets>
            </configuration>
          </execution>
          <execution>
            <id>generate-licenses-html</id>
            <goals>
              <goal>transform</goal>
            </goals>
            <phase>process-resources</phase>
            <configuration>
              <transformationSets>
                <transformationSet>
                  <dir>${project.build.directory}</dir>
                  <includes>
                    <include>licenses.xml</include>
                  </includes>
                  <stylesheet>${templates.dir}/licenses.xsl</stylesheet>
                  <outputDir>${licenses.dir}</outputDir>
                  <fileMappers>
                    <fileMapper implementation="org.codehaus.plexus.components.io.filemappers.FileExtensionMapper">
                      <targetExtension>.html</targetExtension>
                    </fileMapper>
                  </fileMappers>
                  <parameters>
                    <parameter>
                      <name>product</name>
                      <value>${parent.artifactId}:${parent.version}</value>
                    </parameter>
                  </parameters>
                </transformationSet>
              </transformationSets>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
</project>